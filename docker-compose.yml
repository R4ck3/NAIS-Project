version: '3.8'

services:
  eureka-server:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    image: eureka-server:latest
    ports:
      - "8761:8761"

  gateway-api:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    image: gateway-api:latest
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - elastic-search-service
      - relational-service
    ports:
      - "9000:9000"

  relational-service:
    build:
      context: ./RelationalDatabaseService
      dockerfile: Dockerfile
    image: relational-service:latest
    depends_on:
      - postgresdb
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgresdb:5432/nais"
      SPRING_DATASOURCE_USERNAME: nais
      SPRING_DATASOURCE_PASSWORD: nais
    ports:
       - "9030:9030"

  postgresdb:
    image: postgres:latest
    environment:
      POSTGRES_USER: "nais"
      POSTGRES_PASSWORD: "nais"
    volumes:
      - data:/var/lib/postgres
     
  elastic-search-service:
    build:
      context: ./ElasticSearchDatabaseService
      dockerfile: Dockerfile
    image: elastic-spring-example:latest
    restart: on-failure
    depends_on:
      - eureka-server
      - elasticsearch
      #- kafka
    environment:
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    restart: always
    ports:
      - 9200:9200
    env_file:
      - .env
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    env_file:
      - .env
    environment:
      - ELASTICSEARCH_URL=http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
      - ELASTICSEARCH_HOSTS=http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
    depends_on:
      - elasticsearch

volumes:
  data: